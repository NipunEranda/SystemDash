name: SystemDash Release

on:
  push:
    tags:
      - "v*"  # Runs only when pushing a version tag (e.g., v1.0.0)

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        target: [x86_64-unknown-linux-gnu, x86_64-apple-darwin, x86_64-pc-windows-msvc]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: app-linux
            binary_name: app
          # - os: macos-latest
          #   target: x86_64-apple-darwin
          #   artifact_name: app-macos
          #   binary_name: app
          # - os: windows-latest
          #   target: x86_64-pc-windows-msvc
          #   artifact_name: app-windows
          #   binary_name: app.exe

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      # - name: Cache Cargo dependencies
      #   uses: Swatinem/rust-cache@v2
      #   continue-on-error: true

      - name: Build project
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifact
        run: |
          mkdir -p release
          cp target/${{ matrix.target }}/release/${{ matrix.binary_name }} release/
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: release/${{ matrix.binary_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List artifacts
        run: ls -R artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/* 
          token: ${{ secrets.GITHUB_TOKEN }}